// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

#ifndef PROTOBUF_core_2eproto__INCLUDED
#define PROTOBUF_core_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace core {
class FaceAttr;
class FaceAttrDefaultTypeInternal;
extern FaceAttrDefaultTypeInternal _FaceAttr_default_instance_;
class TagAttr;
class TagAttrDefaultTypeInternal;
extern TagAttrDefaultTypeInternal _TagAttr_default_instance_;
}  // namespace core

namespace core {

namespace protobuf_core_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_core_2eproto

// ===================================================================

class FaceAttr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:core.FaceAttr) */ {
 public:
  FaceAttr();
  virtual ~FaceAttr();

  FaceAttr(const FaceAttr& from);

  inline FaceAttr& operator=(const FaceAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FaceAttr& default_instance();

  static inline const FaceAttr* internal_default_instance() {
    return reinterpret_cast<const FaceAttr*>(
               &_FaceAttr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(FaceAttr* other);

  // implements Message ----------------------------------------------

  inline FaceAttr* New() const PROTOBUF_FINAL { return New(NULL); }

  FaceAttr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaceAttr& from);
  void MergeFrom(const FaceAttr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaceAttr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 TagIDs = 2;
  int tagids_size() const;
  void clear_tagids();
  static const int kTagIDsFieldNumber = 2;
  ::google::protobuf::uint32 tagids(int index) const;
  void set_tagids(int index, ::google::protobuf::uint32 value);
  void add_tagids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tagids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tagids();

  // optional bytes Feature = 1;
  bool has_feature() const;
  void clear_feature();
  static const int kFeatureFieldNumber = 1;
  const ::std::string& feature() const;
  void set_feature(const ::std::string& value);
  #if LANG_CXX11
  void set_feature(::std::string&& value);
  #endif
  void set_feature(const char* value);
  void set_feature(const void* value, size_t size);
  ::std::string* mutable_feature();
  ::std::string* release_feature();
  void set_allocated_feature(::std::string* feature);

  // @@protoc_insertion_point(class_scope:core.FaceAttr)
 private:
  void set_has_feature();
  void clear_has_feature();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tagids_;
  ::google::protobuf::internal::ArenaStringPtr feature_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TagAttr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:core.TagAttr) */ {
 public:
  TagAttr();
  virtual ~TagAttr();

  TagAttr(const TagAttr& from);

  inline TagAttr& operator=(const TagAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TagAttr& default_instance();

  static inline const TagAttr* internal_default_instance() {
    return reinterpret_cast<const TagAttr*>(
               &_TagAttr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TagAttr* other);

  // implements Message ----------------------------------------------

  inline TagAttr* New() const PROTOBUF_FINAL { return New(NULL); }

  TagAttr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TagAttr& from);
  void MergeFrom(const TagAttr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TagAttr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TagID = 1;
  bool has_tagid() const;
  void clear_tagid();
  static const int kTagIDFieldNumber = 1;
  ::google::protobuf::uint32 tagid() const;
  void set_tagid(::google::protobuf::uint32 value);

  // optional uint32 Flags = 2;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:core.TagAttr)
 private:
  void set_has_tagid();
  void clear_has_tagid();
  void set_has_flags();
  void clear_has_flags();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 tagid_;
  ::google::protobuf::uint32 flags_;
  friend struct protobuf_core_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FaceAttr

// optional bytes Feature = 1;
inline bool FaceAttr::has_feature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FaceAttr::set_has_feature() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FaceAttr::clear_has_feature() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FaceAttr::clear_feature() {
  feature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_feature();
}
inline const ::std::string& FaceAttr::feature() const {
  // @@protoc_insertion_point(field_get:core.FaceAttr.Feature)
  return feature_.GetNoArena();
}
inline void FaceAttr::set_feature(const ::std::string& value) {
  set_has_feature();
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:core.FaceAttr.Feature)
}
#if LANG_CXX11
inline void FaceAttr::set_feature(::std::string&& value) {
  set_has_feature();
  feature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:core.FaceAttr.Feature)
}
#endif
inline void FaceAttr::set_feature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_feature();
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:core.FaceAttr.Feature)
}
inline void FaceAttr::set_feature(const void* value, size_t size) {
  set_has_feature();
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:core.FaceAttr.Feature)
}
inline ::std::string* FaceAttr::mutable_feature() {
  set_has_feature();
  // @@protoc_insertion_point(field_mutable:core.FaceAttr.Feature)
  return feature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FaceAttr::release_feature() {
  // @@protoc_insertion_point(field_release:core.FaceAttr.Feature)
  clear_has_feature();
  return feature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FaceAttr::set_allocated_feature(::std::string* feature) {
  if (feature != NULL) {
    set_has_feature();
  } else {
    clear_has_feature();
  }
  feature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feature);
  // @@protoc_insertion_point(field_set_allocated:core.FaceAttr.Feature)
}

// repeated uint32 TagIDs = 2;
inline int FaceAttr::tagids_size() const {
  return tagids_.size();
}
inline void FaceAttr::clear_tagids() {
  tagids_.Clear();
}
inline ::google::protobuf::uint32 FaceAttr::tagids(int index) const {
  // @@protoc_insertion_point(field_get:core.FaceAttr.TagIDs)
  return tagids_.Get(index);
}
inline void FaceAttr::set_tagids(int index, ::google::protobuf::uint32 value) {
  tagids_.Set(index, value);
  // @@protoc_insertion_point(field_set:core.FaceAttr.TagIDs)
}
inline void FaceAttr::add_tagids(::google::protobuf::uint32 value) {
  tagids_.Add(value);
  // @@protoc_insertion_point(field_add:core.FaceAttr.TagIDs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FaceAttr::tagids() const {
  // @@protoc_insertion_point(field_list:core.FaceAttr.TagIDs)
  return tagids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FaceAttr::mutable_tagids() {
  // @@protoc_insertion_point(field_mutable_list:core.FaceAttr.TagIDs)
  return &tagids_;
}

// -------------------------------------------------------------------

// TagAttr

// optional uint32 TagID = 1;
inline bool TagAttr::has_tagid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TagAttr::set_has_tagid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TagAttr::clear_has_tagid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TagAttr::clear_tagid() {
  tagid_ = 0u;
  clear_has_tagid();
}
inline ::google::protobuf::uint32 TagAttr::tagid() const {
  // @@protoc_insertion_point(field_get:core.TagAttr.TagID)
  return tagid_;
}
inline void TagAttr::set_tagid(::google::protobuf::uint32 value) {
  set_has_tagid();
  tagid_ = value;
  // @@protoc_insertion_point(field_set:core.TagAttr.TagID)
}

// optional uint32 Flags = 2;
inline bool TagAttr::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TagAttr::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TagAttr::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TagAttr::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 TagAttr::flags() const {
  // @@protoc_insertion_point(field_get:core.TagAttr.Flags)
  return flags_;
}
inline void TagAttr::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:core.TagAttr.Flags)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace core

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_core_2eproto__INCLUDED
