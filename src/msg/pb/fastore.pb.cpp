// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fastore.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "fastore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace fastore {
class FaceAttrDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FaceAttr> {
} _FaceAttr_default_instance_;
class TagAttrDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TagAttr> {
} _TagAttr_default_instance_;

namespace protobuf_fastore_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAttr, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAttr, feature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FaceAttr, tagids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagAttr, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagAttr, tagid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TagAttr, flags_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(FaceAttr)},
  { 9, 16, sizeof(TagAttr)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_FaceAttr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TagAttr_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "fastore.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _FaceAttr_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TagAttr_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _FaceAttr_default_instance_.DefaultConstruct();
  _TagAttr_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rfastore.proto\022\007fastore\"+\n\010FaceAttr\022\017\n\007"
      "Feature\030\001 \001(\014\022\016\n\006TagIDs\030\002 \003(\r\"\'\n\007TagAttr"
      "\022\r\n\005TagID\030\001 \001(\r\022\r\n\005Flags\030\002 \001(\r"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 110);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fastore.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_fastore_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceAttr::kFeatureFieldNumber;
const int FaceAttr::kTagIDsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceAttr::FaceAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fastore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fastore.FaceAttr)
}
FaceAttr::FaceAttr(const FaceAttr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tagids_(from.tagids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  feature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_feature()) {
    feature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feature_);
  }
  // @@protoc_insertion_point(copy_constructor:fastore.FaceAttr)
}

void FaceAttr::SharedCtor() {
  _cached_size_ = 0;
  feature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FaceAttr::~FaceAttr() {
  // @@protoc_insertion_point(destructor:fastore.FaceAttr)
  SharedDtor();
}

void FaceAttr::SharedDtor() {
  feature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FaceAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaceAttr::descriptor() {
  protobuf_fastore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceAttr& FaceAttr::default_instance() {
  protobuf_fastore_2eproto::InitDefaults();
  return *internal_default_instance();
}

FaceAttr* FaceAttr::New(::google::protobuf::Arena* arena) const {
  FaceAttr* n = new FaceAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FaceAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:fastore.FaceAttr)
  tagids_.Clear();
  if (has_feature()) {
    GOOGLE_DCHECK(!feature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*feature_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FaceAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fastore.FaceAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes Feature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_feature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 TagIDs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_tagids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tagids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fastore.FaceAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fastore.FaceAttr)
  return false;
#undef DO_
}

void FaceAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fastore.FaceAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes Feature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->feature(), output);
  }

  // repeated uint32 TagIDs = 2;
  for (int i = 0, n = this->tagids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->tagids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fastore.FaceAttr)
}

::google::protobuf::uint8* FaceAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fastore.FaceAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes Feature = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->feature(), target);
  }

  // repeated uint32 TagIDs = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->tagids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fastore.FaceAttr)
  return target;
}

size_t FaceAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fastore.FaceAttr)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 TagIDs = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->tagids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->tagids_size());
    total_size += data_size;
  }

  // optional bytes Feature = 1;
  if (has_feature()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->feature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaceAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fastore.FaceAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceAttr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fastore.FaceAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fastore.FaceAttr)
    MergeFrom(*source);
  }
}

void FaceAttr::MergeFrom(const FaceAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fastore.FaceAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tagids_.MergeFrom(from.tagids_);
  if (from.has_feature()) {
    set_has_feature();
    feature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feature_);
  }
}

void FaceAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fastore.FaceAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceAttr::CopyFrom(const FaceAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastore.FaceAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceAttr::IsInitialized() const {
  return true;
}

void FaceAttr::Swap(FaceAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceAttr::InternalSwap(FaceAttr* other) {
  tagids_.InternalSwap(&other->tagids_);
  feature_.Swap(&other->feature_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FaceAttr::GetMetadata() const {
  protobuf_fastore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fastore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FaceAttr

// optional bytes Feature = 1;
bool FaceAttr::has_feature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FaceAttr::set_has_feature() {
  _has_bits_[0] |= 0x00000001u;
}
void FaceAttr::clear_has_feature() {
  _has_bits_[0] &= ~0x00000001u;
}
void FaceAttr::clear_feature() {
  feature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_feature();
}
const ::std::string& FaceAttr::feature() const {
  // @@protoc_insertion_point(field_get:fastore.FaceAttr.Feature)
  return feature_.GetNoArena();
}
void FaceAttr::set_feature(const ::std::string& value) {
  set_has_feature();
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fastore.FaceAttr.Feature)
}
#if LANG_CXX11
void FaceAttr::set_feature(::std::string&& value) {
  set_has_feature();
  feature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fastore.FaceAttr.Feature)
}
#endif
void FaceAttr::set_feature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_feature();
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fastore.FaceAttr.Feature)
}
void FaceAttr::set_feature(const void* value, size_t size) {
  set_has_feature();
  feature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fastore.FaceAttr.Feature)
}
::std::string* FaceAttr::mutable_feature() {
  set_has_feature();
  // @@protoc_insertion_point(field_mutable:fastore.FaceAttr.Feature)
  return feature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FaceAttr::release_feature() {
  // @@protoc_insertion_point(field_release:fastore.FaceAttr.Feature)
  clear_has_feature();
  return feature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FaceAttr::set_allocated_feature(::std::string* feature) {
  if (feature != NULL) {
    set_has_feature();
  } else {
    clear_has_feature();
  }
  feature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feature);
  // @@protoc_insertion_point(field_set_allocated:fastore.FaceAttr.Feature)
}

// repeated uint32 TagIDs = 2;
int FaceAttr::tagids_size() const {
  return tagids_.size();
}
void FaceAttr::clear_tagids() {
  tagids_.Clear();
}
::google::protobuf::uint32 FaceAttr::tagids(int index) const {
  // @@protoc_insertion_point(field_get:fastore.FaceAttr.TagIDs)
  return tagids_.Get(index);
}
void FaceAttr::set_tagids(int index, ::google::protobuf::uint32 value) {
  tagids_.Set(index, value);
  // @@protoc_insertion_point(field_set:fastore.FaceAttr.TagIDs)
}
void FaceAttr::add_tagids(::google::protobuf::uint32 value) {
  tagids_.Add(value);
  // @@protoc_insertion_point(field_add:fastore.FaceAttr.TagIDs)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FaceAttr::tagids() const {
  // @@protoc_insertion_point(field_list:fastore.FaceAttr.TagIDs)
  return tagids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FaceAttr::mutable_tagids() {
  // @@protoc_insertion_point(field_mutable_list:fastore.FaceAttr.TagIDs)
  return &tagids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TagAttr::kTagIDFieldNumber;
const int TagAttr::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TagAttr::TagAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_fastore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fastore.TagAttr)
}
TagAttr::TagAttr(const TagAttr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tagid_, &from.tagid_,
    reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&tagid_) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:fastore.TagAttr)
}

void TagAttr::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&tagid_, 0, reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&tagid_) + sizeof(flags_));
}

TagAttr::~TagAttr() {
  // @@protoc_insertion_point(destructor:fastore.TagAttr)
  SharedDtor();
}

void TagAttr::SharedDtor() {
}

void TagAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TagAttr::descriptor() {
  protobuf_fastore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fastore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TagAttr& TagAttr::default_instance() {
  protobuf_fastore_2eproto::InitDefaults();
  return *internal_default_instance();
}

TagAttr* TagAttr::New(::google::protobuf::Arena* arena) const {
  TagAttr* n = new TagAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TagAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:fastore.TagAttr)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&tagid_, 0, reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&tagid_) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TagAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fastore.TagAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TagID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_tagid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tagid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Flags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fastore.TagAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fastore.TagAttr)
  return false;
#undef DO_
}

void TagAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fastore.TagAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 TagID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tagid(), output);
  }

  // optional uint32 Flags = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->flags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fastore.TagAttr)
}

::google::protobuf::uint8* TagAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fastore.TagAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 TagID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tagid(), target);
  }

  // optional uint32 Flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->flags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fastore.TagAttr)
  return target;
}

size_t TagAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fastore.TagAttr)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 TagID = 1;
    if (has_tagid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tagid());
    }

    // optional uint32 Flags = 2;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TagAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fastore.TagAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const TagAttr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TagAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fastore.TagAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fastore.TagAttr)
    MergeFrom(*source);
  }
}

void TagAttr::MergeFrom(const TagAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fastore.TagAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tagid_ = from.tagid_;
    }
    if (cached_has_bits & 0x00000002u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TagAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fastore.TagAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TagAttr::CopyFrom(const TagAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastore.TagAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TagAttr::IsInitialized() const {
  return true;
}

void TagAttr::Swap(TagAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TagAttr::InternalSwap(TagAttr* other) {
  std::swap(tagid_, other->tagid_);
  std::swap(flags_, other->flags_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TagAttr::GetMetadata() const {
  protobuf_fastore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fastore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TagAttr

// optional uint32 TagID = 1;
bool TagAttr::has_tagid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TagAttr::set_has_tagid() {
  _has_bits_[0] |= 0x00000001u;
}
void TagAttr::clear_has_tagid() {
  _has_bits_[0] &= ~0x00000001u;
}
void TagAttr::clear_tagid() {
  tagid_ = 0u;
  clear_has_tagid();
}
::google::protobuf::uint32 TagAttr::tagid() const {
  // @@protoc_insertion_point(field_get:fastore.TagAttr.TagID)
  return tagid_;
}
void TagAttr::set_tagid(::google::protobuf::uint32 value) {
  set_has_tagid();
  tagid_ = value;
  // @@protoc_insertion_point(field_set:fastore.TagAttr.TagID)
}

// optional uint32 Flags = 2;
bool TagAttr::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TagAttr::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
void TagAttr::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
void TagAttr::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
::google::protobuf::uint32 TagAttr::flags() const {
  // @@protoc_insertion_point(field_get:fastore.TagAttr.Flags)
  return flags_;
}
void TagAttr::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:fastore.TagAttr.Flags)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace fastore

// @@protoc_insertion_point(global_scope)
