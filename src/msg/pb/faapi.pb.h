// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: faapi.proto

#ifndef PROTOBUF_faapi_2eproto__INCLUDED
#define PROTOBUF_faapi_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace faapi {
class CheckinReq;
class CheckinReqDefaultTypeInternal;
extern CheckinReqDefaultTypeInternal _CheckinReq_default_instance_;
class CheckinResp;
class CheckinRespDefaultTypeInternal;
extern CheckinRespDefaultTypeInternal _CheckinResp_default_instance_;
class DetectReq;
class DetectReqDefaultTypeInternal;
extern DetectReqDefaultTypeInternal _DetectReq_default_instance_;
class DetectResp;
class DetectRespDefaultTypeInternal;
extern DetectRespDefaultTypeInternal _DetectResp_default_instance_;
class ImgBuf;
class ImgBufDefaultTypeInternal;
extern ImgBufDefaultTypeInternal _ImgBuf_default_instance_;
class Rect;
class RectDefaultTypeInternal;
extern RectDefaultTypeInternal _Rect_default_instance_;
class SearchReq;
class SearchReqDefaultTypeInternal;
extern SearchReqDefaultTypeInternal _SearchReq_default_instance_;
class SearchResp;
class SearchRespDefaultTypeInternal;
extern SearchRespDefaultTypeInternal _SearchResp_default_instance_;
class SearchResult;
class SearchResultDefaultTypeInternal;
extern SearchResultDefaultTypeInternal _SearchResult_default_instance_;
}  // namespace faapi

namespace faapi {

namespace protobuf_faapi_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_faapi_2eproto

// ===================================================================

class ImgBuf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faapi.ImgBuf) */ {
 public:
  ImgBuf();
  virtual ~ImgBuf();

  ImgBuf(const ImgBuf& from);

  inline ImgBuf& operator=(const ImgBuf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImgBuf& default_instance();

  static inline const ImgBuf* internal_default_instance() {
    return reinterpret_cast<const ImgBuf*>(
               &_ImgBuf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ImgBuf* other);

  // implements Message ----------------------------------------------

  inline ImgBuf* New() const PROTOBUF_FINAL { return New(NULL); }

  ImgBuf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImgBuf& from);
  void MergeFrom(const ImgBuf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImgBuf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:faapi.ImgBuf)
 private:
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct protobuf_faapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DetectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faapi.DetectReq) */ {
 public:
  DetectReq();
  virtual ~DetectReq();

  DetectReq(const DetectReq& from);

  inline DetectReq& operator=(const DetectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectReq& default_instance();

  static inline const DetectReq* internal_default_instance() {
    return reinterpret_cast<const DetectReq*>(
               &_DetectReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DetectReq* other);

  // implements Message ----------------------------------------------

  inline DetectReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectReq& from);
  void MergeFrom(const DetectReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .faapi.ImgBuf imgBuf = 2;
  bool has_imgbuf() const;
  void clear_imgbuf();
  static const int kImgBufFieldNumber = 2;
  const ::faapi::ImgBuf& imgbuf() const;
  ::faapi::ImgBuf* mutable_imgbuf();
  ::faapi::ImgBuf* release_imgbuf();
  void set_allocated_imgbuf(::faapi::ImgBuf* imgbuf);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:faapi.DetectReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_imgbuf();
  void clear_has_imgbuf();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::faapi::ImgBuf* imgbuf_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_faapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Rect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faapi.Rect) */ {
 public:
  Rect();
  virtual ~Rect();

  Rect(const Rect& from);

  inline Rect& operator=(const Rect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rect& default_instance();

  static inline const Rect* internal_default_instance() {
    return reinterpret_cast<const Rect*>(
               &_Rect_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Rect* other);

  // implements Message ----------------------------------------------

  inline Rect* New() const PROTOBUF_FINAL { return New(NULL); }

  Rect* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Rect& from);
  void MergeFrom(const Rect& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Rect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 left = 1;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  ::google::protobuf::uint32 left() const;
  void set_left(::google::protobuf::uint32 value);

  // optional uint32 top = 2;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 2;
  ::google::protobuf::uint32 top() const;
  void set_top(::google::protobuf::uint32 value);

  // optional uint32 right = 3;
  bool has_right() const;
  void clear_right();
  static const int kRightFieldNumber = 3;
  ::google::protobuf::uint32 right() const;
  void set_right(::google::protobuf::uint32 value);

  // optional uint32 bottom = 4;
  bool has_bottom() const;
  void clear_bottom();
  static const int kBottomFieldNumber = 4;
  ::google::protobuf::uint32 bottom() const;
  void set_bottom(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:faapi.Rect)
 private:
  void set_has_left();
  void clear_has_left();
  void set_has_top();
  void clear_has_top();
  void set_has_right();
  void clear_has_right();
  void set_has_bottom();
  void clear_has_bottom();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 left_;
  ::google::protobuf::uint32 top_;
  ::google::protobuf::uint32 right_;
  ::google::protobuf::uint32 bottom_;
  friend struct protobuf_faapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DetectResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faapi.DetectResp) */ {
 public:
  DetectResp();
  virtual ~DetectResp();

  DetectResp(const DetectResp& from);

  inline DetectResp& operator=(const DetectResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectResp& default_instance();

  static inline const DetectResp* internal_default_instance() {
    return reinterpret_cast<const DetectResp*>(
               &_DetectResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DetectResp* other);

  // implements Message ----------------------------------------------

  inline DetectResp* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectResp& from);
  void MergeFrom(const DetectResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .faapi.Rect faceRects = 2;
  int facerects_size() const;
  void clear_facerects();
  static const int kFaceRectsFieldNumber = 2;
  const ::faapi::Rect& facerects(int index) const;
  ::faapi::Rect* mutable_facerects(int index);
  ::faapi::Rect* add_facerects();
  ::google::protobuf::RepeatedPtrField< ::faapi::Rect >*
      mutable_facerects();
  const ::google::protobuf::RepeatedPtrField< ::faapi::Rect >&
      facerects() const;

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:faapi.DetectResp)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::faapi::Rect > facerects_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_faapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckinReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faapi.CheckinReq) */ {
 public:
  CheckinReq();
  virtual ~CheckinReq();

  CheckinReq(const CheckinReq& from);

  inline CheckinReq& operator=(const CheckinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckinReq& default_instance();

  static inline const CheckinReq* internal_default_instance() {
    return reinterpret_cast<const CheckinReq*>(
               &_CheckinReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CheckinReq* other);

  // implements Message ----------------------------------------------

  inline CheckinReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckinReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckinReq& from);
  void MergeFrom(const CheckinReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckinReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .faapi.ImgBuf imgBuf = 2;
  bool has_imgbuf() const;
  void clear_imgbuf();
  static const int kImgBufFieldNumber = 2;
  const ::faapi::ImgBuf& imgbuf() const;
  ::faapi::ImgBuf* mutable_imgbuf();
  ::faapi::ImgBuf* release_imgbuf();
  void set_allocated_imgbuf(::faapi::ImgBuf* imgbuf);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:faapi.CheckinReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_imgbuf();
  void clear_has_imgbuf();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::faapi::ImgBuf* imgbuf_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_faapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckinResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faapi.CheckinResp) */ {
 public:
  CheckinResp();
  virtual ~CheckinResp();

  CheckinResp(const CheckinResp& from);

  inline CheckinResp& operator=(const CheckinResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckinResp& default_instance();

  static inline const CheckinResp* internal_default_instance() {
    return reinterpret_cast<const CheckinResp*>(
               &_CheckinResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CheckinResp* other);

  // implements Message ----------------------------------------------

  inline CheckinResp* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckinResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckinResp& from);
  void MergeFrom(const CheckinResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckinResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 faceID = 2;
  int faceid_size() const;
  void clear_faceid();
  static const int kFaceIDFieldNumber = 2;
  ::google::protobuf::uint32 faceid(int index) const;
  void set_faceid(int index, ::google::protobuf::uint32 value);
  void add_faceid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      faceid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_faceid();

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:faapi.CheckinResp)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > faceid_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_faapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faapi.SearchReq) */ {
 public:
  SearchReq();
  virtual ~SearchReq();

  SearchReq(const SearchReq& from);

  inline SearchReq& operator=(const SearchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchReq& default_instance();

  static inline const SearchReq* internal_default_instance() {
    return reinterpret_cast<const SearchReq*>(
               &_SearchReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SearchReq* other);

  // implements Message ----------------------------------------------

  inline SearchReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchReq& from);
  void MergeFrom(const SearchReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string tagNames = 3;
  int tagnames_size() const;
  void clear_tagnames();
  static const int kTagNamesFieldNumber = 3;
  const ::std::string& tagnames(int index) const;
  ::std::string* mutable_tagnames(int index);
  void set_tagnames(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tagnames(int index, ::std::string&& value);
  #endif
  void set_tagnames(int index, const char* value);
  void set_tagnames(int index, const char* value, size_t size);
  ::std::string* add_tagnames();
  void add_tagnames(const ::std::string& value);
  #if LANG_CXX11
  void add_tagnames(::std::string&& value);
  #endif
  void add_tagnames(const char* value);
  void add_tagnames(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& tagnames() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tagnames();

  // optional .faapi.ImgBuf imgBuf = 2;
  bool has_imgbuf() const;
  void clear_imgbuf();
  static const int kImgBufFieldNumber = 2;
  const ::faapi::ImgBuf& imgbuf() const;
  ::faapi::ImgBuf* mutable_imgbuf();
  ::faapi::ImgBuf* release_imgbuf();
  void set_allocated_imgbuf(::faapi::ImgBuf* imgbuf);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:faapi.SearchReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_imgbuf();
  void clear_has_imgbuf();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tagnames_;
  ::faapi::ImgBuf* imgbuf_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_faapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faapi.SearchResult) */ {
 public:
  SearchResult();
  virtual ~SearchResult();

  SearchResult(const SearchResult& from);

  inline SearchResult& operator=(const SearchResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResult& default_instance();

  static inline const SearchResult* internal_default_instance() {
    return reinterpret_cast<const SearchResult*>(
               &_SearchResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SearchResult* other);

  // implements Message ----------------------------------------------

  inline SearchResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchResult& from);
  void MergeFrom(const SearchResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tagName = 3;
  bool has_tagname() const;
  void clear_tagname();
  static const int kTagNameFieldNumber = 3;
  const ::std::string& tagname() const;
  void set_tagname(const ::std::string& value);
  #if LANG_CXX11
  void set_tagname(::std::string&& value);
  #endif
  void set_tagname(const char* value);
  void set_tagname(const char* value, size_t size);
  ::std::string* mutable_tagname();
  ::std::string* release_tagname();
  void set_allocated_tagname(::std::string* tagname);

  // optional double score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  double score() const;
  void set_score(double value);

  // optional uint32 faceID = 1;
  bool has_faceid() const;
  void clear_faceid();
  static const int kFaceIDFieldNumber = 1;
  ::google::protobuf::uint32 faceid() const;
  void set_faceid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:faapi.SearchResult)
 private:
  void set_has_faceid();
  void clear_has_faceid();
  void set_has_score();
  void clear_has_score();
  void set_has_tagname();
  void clear_has_tagname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tagname_;
  double score_;
  ::google::protobuf::uint32 faceid_;
  friend struct protobuf_faapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:faapi.SearchResp) */ {
 public:
  SearchResp();
  virtual ~SearchResp();

  SearchResp(const SearchResp& from);

  inline SearchResp& operator=(const SearchResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResp& default_instance();

  static inline const SearchResp* internal_default_instance() {
    return reinterpret_cast<const SearchResp*>(
               &_SearchResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SearchResp* other);

  // implements Message ----------------------------------------------

  inline SearchResp* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchResp& from);
  void MergeFrom(const SearchResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .faapi.SearchResult results = 2;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 2;
  const ::faapi::SearchResult& results(int index) const;
  ::faapi::SearchResult* mutable_results(int index);
  ::faapi::SearchResult* add_results();
  ::google::protobuf::RepeatedPtrField< ::faapi::SearchResult >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::faapi::SearchResult >&
      results() const;

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:faapi.SearchResp)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::faapi::SearchResult > results_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_faapi_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ImgBuf

// optional bytes data = 1;
inline bool ImgBuf::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImgBuf::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImgBuf::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImgBuf::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& ImgBuf::data() const {
  // @@protoc_insertion_point(field_get:faapi.ImgBuf.data)
  return data_.GetNoArena();
}
inline void ImgBuf::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faapi.ImgBuf.data)
}
#if LANG_CXX11
inline void ImgBuf::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:faapi.ImgBuf.data)
}
#endif
inline void ImgBuf::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faapi.ImgBuf.data)
}
inline void ImgBuf::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faapi.ImgBuf.data)
}
inline ::std::string* ImgBuf::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:faapi.ImgBuf.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImgBuf::release_data() {
  // @@protoc_insertion_point(field_release:faapi.ImgBuf.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImgBuf::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:faapi.ImgBuf.data)
}

// -------------------------------------------------------------------

// DetectReq

// optional uint32 id = 1;
inline bool DetectReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DetectReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DetectReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DetectReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DetectReq::id() const {
  // @@protoc_insertion_point(field_get:faapi.DetectReq.id)
  return id_;
}
inline void DetectReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:faapi.DetectReq.id)
}

// optional .faapi.ImgBuf imgBuf = 2;
inline bool DetectReq::has_imgbuf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DetectReq::set_has_imgbuf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DetectReq::clear_has_imgbuf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DetectReq::clear_imgbuf() {
  if (imgbuf_ != NULL) imgbuf_->::faapi::ImgBuf::Clear();
  clear_has_imgbuf();
}
inline const ::faapi::ImgBuf& DetectReq::imgbuf() const {
  // @@protoc_insertion_point(field_get:faapi.DetectReq.imgBuf)
  return imgbuf_ != NULL ? *imgbuf_
                         : *::faapi::ImgBuf::internal_default_instance();
}
inline ::faapi::ImgBuf* DetectReq::mutable_imgbuf() {
  set_has_imgbuf();
  if (imgbuf_ == NULL) {
    imgbuf_ = new ::faapi::ImgBuf;
  }
  // @@protoc_insertion_point(field_mutable:faapi.DetectReq.imgBuf)
  return imgbuf_;
}
inline ::faapi::ImgBuf* DetectReq::release_imgbuf() {
  // @@protoc_insertion_point(field_release:faapi.DetectReq.imgBuf)
  clear_has_imgbuf();
  ::faapi::ImgBuf* temp = imgbuf_;
  imgbuf_ = NULL;
  return temp;
}
inline void DetectReq::set_allocated_imgbuf(::faapi::ImgBuf* imgbuf) {
  delete imgbuf_;
  imgbuf_ = imgbuf;
  if (imgbuf) {
    set_has_imgbuf();
  } else {
    clear_has_imgbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.DetectReq.imgBuf)
}

// -------------------------------------------------------------------

// Rect

// optional uint32 left = 1;
inline bool Rect::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Rect::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Rect::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Rect::clear_left() {
  left_ = 0u;
  clear_has_left();
}
inline ::google::protobuf::uint32 Rect::left() const {
  // @@protoc_insertion_point(field_get:faapi.Rect.left)
  return left_;
}
inline void Rect::set_left(::google::protobuf::uint32 value) {
  set_has_left();
  left_ = value;
  // @@protoc_insertion_point(field_set:faapi.Rect.left)
}

// optional uint32 top = 2;
inline bool Rect::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Rect::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Rect::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Rect::clear_top() {
  top_ = 0u;
  clear_has_top();
}
inline ::google::protobuf::uint32 Rect::top() const {
  // @@protoc_insertion_point(field_get:faapi.Rect.top)
  return top_;
}
inline void Rect::set_top(::google::protobuf::uint32 value) {
  set_has_top();
  top_ = value;
  // @@protoc_insertion_point(field_set:faapi.Rect.top)
}

// optional uint32 right = 3;
inline bool Rect::has_right() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Rect::set_has_right() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Rect::clear_has_right() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Rect::clear_right() {
  right_ = 0u;
  clear_has_right();
}
inline ::google::protobuf::uint32 Rect::right() const {
  // @@protoc_insertion_point(field_get:faapi.Rect.right)
  return right_;
}
inline void Rect::set_right(::google::protobuf::uint32 value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:faapi.Rect.right)
}

// optional uint32 bottom = 4;
inline bool Rect::has_bottom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Rect::set_has_bottom() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Rect::clear_has_bottom() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Rect::clear_bottom() {
  bottom_ = 0u;
  clear_has_bottom();
}
inline ::google::protobuf::uint32 Rect::bottom() const {
  // @@protoc_insertion_point(field_get:faapi.Rect.bottom)
  return bottom_;
}
inline void Rect::set_bottom(::google::protobuf::uint32 value) {
  set_has_bottom();
  bottom_ = value;
  // @@protoc_insertion_point(field_set:faapi.Rect.bottom)
}

// -------------------------------------------------------------------

// DetectResp

// optional uint32 id = 1;
inline bool DetectResp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DetectResp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DetectResp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DetectResp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DetectResp::id() const {
  // @@protoc_insertion_point(field_get:faapi.DetectResp.id)
  return id_;
}
inline void DetectResp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:faapi.DetectResp.id)
}

// repeated .faapi.Rect faceRects = 2;
inline int DetectResp::facerects_size() const {
  return facerects_.size();
}
inline void DetectResp::clear_facerects() {
  facerects_.Clear();
}
inline const ::faapi::Rect& DetectResp::facerects(int index) const {
  // @@protoc_insertion_point(field_get:faapi.DetectResp.faceRects)
  return facerects_.Get(index);
}
inline ::faapi::Rect* DetectResp::mutable_facerects(int index) {
  // @@protoc_insertion_point(field_mutable:faapi.DetectResp.faceRects)
  return facerects_.Mutable(index);
}
inline ::faapi::Rect* DetectResp::add_facerects() {
  // @@protoc_insertion_point(field_add:faapi.DetectResp.faceRects)
  return facerects_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::faapi::Rect >*
DetectResp::mutable_facerects() {
  // @@protoc_insertion_point(field_mutable_list:faapi.DetectResp.faceRects)
  return &facerects_;
}
inline const ::google::protobuf::RepeatedPtrField< ::faapi::Rect >&
DetectResp::facerects() const {
  // @@protoc_insertion_point(field_list:faapi.DetectResp.faceRects)
  return facerects_;
}

// -------------------------------------------------------------------

// CheckinReq

// optional uint32 id = 1;
inline bool CheckinReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckinReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckinReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckinReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CheckinReq::id() const {
  // @@protoc_insertion_point(field_get:faapi.CheckinReq.id)
  return id_;
}
inline void CheckinReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:faapi.CheckinReq.id)
}

// optional .faapi.ImgBuf imgBuf = 2;
inline bool CheckinReq::has_imgbuf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckinReq::set_has_imgbuf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckinReq::clear_has_imgbuf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckinReq::clear_imgbuf() {
  if (imgbuf_ != NULL) imgbuf_->::faapi::ImgBuf::Clear();
  clear_has_imgbuf();
}
inline const ::faapi::ImgBuf& CheckinReq::imgbuf() const {
  // @@protoc_insertion_point(field_get:faapi.CheckinReq.imgBuf)
  return imgbuf_ != NULL ? *imgbuf_
                         : *::faapi::ImgBuf::internal_default_instance();
}
inline ::faapi::ImgBuf* CheckinReq::mutable_imgbuf() {
  set_has_imgbuf();
  if (imgbuf_ == NULL) {
    imgbuf_ = new ::faapi::ImgBuf;
  }
  // @@protoc_insertion_point(field_mutable:faapi.CheckinReq.imgBuf)
  return imgbuf_;
}
inline ::faapi::ImgBuf* CheckinReq::release_imgbuf() {
  // @@protoc_insertion_point(field_release:faapi.CheckinReq.imgBuf)
  clear_has_imgbuf();
  ::faapi::ImgBuf* temp = imgbuf_;
  imgbuf_ = NULL;
  return temp;
}
inline void CheckinReq::set_allocated_imgbuf(::faapi::ImgBuf* imgbuf) {
  delete imgbuf_;
  imgbuf_ = imgbuf;
  if (imgbuf) {
    set_has_imgbuf();
  } else {
    clear_has_imgbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.CheckinReq.imgBuf)
}

// -------------------------------------------------------------------

// CheckinResp

// optional uint32 id = 1;
inline bool CheckinResp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckinResp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckinResp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckinResp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CheckinResp::id() const {
  // @@protoc_insertion_point(field_get:faapi.CheckinResp.id)
  return id_;
}
inline void CheckinResp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:faapi.CheckinResp.id)
}

// repeated uint32 faceID = 2;
inline int CheckinResp::faceid_size() const {
  return faceid_.size();
}
inline void CheckinResp::clear_faceid() {
  faceid_.Clear();
}
inline ::google::protobuf::uint32 CheckinResp::faceid(int index) const {
  // @@protoc_insertion_point(field_get:faapi.CheckinResp.faceID)
  return faceid_.Get(index);
}
inline void CheckinResp::set_faceid(int index, ::google::protobuf::uint32 value) {
  faceid_.Set(index, value);
  // @@protoc_insertion_point(field_set:faapi.CheckinResp.faceID)
}
inline void CheckinResp::add_faceid(::google::protobuf::uint32 value) {
  faceid_.Add(value);
  // @@protoc_insertion_point(field_add:faapi.CheckinResp.faceID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CheckinResp::faceid() const {
  // @@protoc_insertion_point(field_list:faapi.CheckinResp.faceID)
  return faceid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CheckinResp::mutable_faceid() {
  // @@protoc_insertion_point(field_mutable_list:faapi.CheckinResp.faceID)
  return &faceid_;
}

// -------------------------------------------------------------------

// SearchReq

// optional uint32 id = 1;
inline bool SearchReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearchReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearchReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SearchReq::id() const {
  // @@protoc_insertion_point(field_get:faapi.SearchReq.id)
  return id_;
}
inline void SearchReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:faapi.SearchReq.id)
}

// optional .faapi.ImgBuf imgBuf = 2;
inline bool SearchReq::has_imgbuf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchReq::set_has_imgbuf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchReq::clear_has_imgbuf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchReq::clear_imgbuf() {
  if (imgbuf_ != NULL) imgbuf_->::faapi::ImgBuf::Clear();
  clear_has_imgbuf();
}
inline const ::faapi::ImgBuf& SearchReq::imgbuf() const {
  // @@protoc_insertion_point(field_get:faapi.SearchReq.imgBuf)
  return imgbuf_ != NULL ? *imgbuf_
                         : *::faapi::ImgBuf::internal_default_instance();
}
inline ::faapi::ImgBuf* SearchReq::mutable_imgbuf() {
  set_has_imgbuf();
  if (imgbuf_ == NULL) {
    imgbuf_ = new ::faapi::ImgBuf;
  }
  // @@protoc_insertion_point(field_mutable:faapi.SearchReq.imgBuf)
  return imgbuf_;
}
inline ::faapi::ImgBuf* SearchReq::release_imgbuf() {
  // @@protoc_insertion_point(field_release:faapi.SearchReq.imgBuf)
  clear_has_imgbuf();
  ::faapi::ImgBuf* temp = imgbuf_;
  imgbuf_ = NULL;
  return temp;
}
inline void SearchReq::set_allocated_imgbuf(::faapi::ImgBuf* imgbuf) {
  delete imgbuf_;
  imgbuf_ = imgbuf;
  if (imgbuf) {
    set_has_imgbuf();
  } else {
    clear_has_imgbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:faapi.SearchReq.imgBuf)
}

// repeated string tagNames = 3;
inline int SearchReq::tagnames_size() const {
  return tagnames_.size();
}
inline void SearchReq::clear_tagnames() {
  tagnames_.Clear();
}
inline const ::std::string& SearchReq::tagnames(int index) const {
  // @@protoc_insertion_point(field_get:faapi.SearchReq.tagNames)
  return tagnames_.Get(index);
}
inline ::std::string* SearchReq::mutable_tagnames(int index) {
  // @@protoc_insertion_point(field_mutable:faapi.SearchReq.tagNames)
  return tagnames_.Mutable(index);
}
inline void SearchReq::set_tagnames(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:faapi.SearchReq.tagNames)
  tagnames_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchReq::set_tagnames(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:faapi.SearchReq.tagNames)
  tagnames_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchReq::set_tagnames(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tagnames_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:faapi.SearchReq.tagNames)
}
inline void SearchReq::set_tagnames(int index, const char* value, size_t size) {
  tagnames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:faapi.SearchReq.tagNames)
}
inline ::std::string* SearchReq::add_tagnames() {
  // @@protoc_insertion_point(field_add_mutable:faapi.SearchReq.tagNames)
  return tagnames_.Add();
}
inline void SearchReq::add_tagnames(const ::std::string& value) {
  tagnames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:faapi.SearchReq.tagNames)
}
#if LANG_CXX11
inline void SearchReq::add_tagnames(::std::string&& value) {
  tagnames_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:faapi.SearchReq.tagNames)
}
#endif
inline void SearchReq::add_tagnames(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tagnames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:faapi.SearchReq.tagNames)
}
inline void SearchReq::add_tagnames(const char* value, size_t size) {
  tagnames_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:faapi.SearchReq.tagNames)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchReq::tagnames() const {
  // @@protoc_insertion_point(field_list:faapi.SearchReq.tagNames)
  return tagnames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchReq::mutable_tagnames() {
  // @@protoc_insertion_point(field_mutable_list:faapi.SearchReq.tagNames)
  return &tagnames_;
}

// -------------------------------------------------------------------

// SearchResult

// optional uint32 faceID = 1;
inline bool SearchResult::has_faceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SearchResult::set_has_faceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SearchResult::clear_has_faceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SearchResult::clear_faceid() {
  faceid_ = 0u;
  clear_has_faceid();
}
inline ::google::protobuf::uint32 SearchResult::faceid() const {
  // @@protoc_insertion_point(field_get:faapi.SearchResult.faceID)
  return faceid_;
}
inline void SearchResult::set_faceid(::google::protobuf::uint32 value) {
  set_has_faceid();
  faceid_ = value;
  // @@protoc_insertion_point(field_set:faapi.SearchResult.faceID)
}

// optional double score = 2;
inline bool SearchResult::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchResult::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearchResult::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearchResult::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline double SearchResult::score() const {
  // @@protoc_insertion_point(field_get:faapi.SearchResult.score)
  return score_;
}
inline void SearchResult::set_score(double value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:faapi.SearchResult.score)
}

// optional string tagName = 3;
inline bool SearchResult::has_tagname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchResult::set_has_tagname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchResult::clear_has_tagname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchResult::clear_tagname() {
  tagname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tagname();
}
inline const ::std::string& SearchResult::tagname() const {
  // @@protoc_insertion_point(field_get:faapi.SearchResult.tagName)
  return tagname_.GetNoArena();
}
inline void SearchResult::set_tagname(const ::std::string& value) {
  set_has_tagname();
  tagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:faapi.SearchResult.tagName)
}
#if LANG_CXX11
inline void SearchResult::set_tagname(::std::string&& value) {
  set_has_tagname();
  tagname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:faapi.SearchResult.tagName)
}
#endif
inline void SearchResult::set_tagname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tagname();
  tagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:faapi.SearchResult.tagName)
}
inline void SearchResult::set_tagname(const char* value, size_t size) {
  set_has_tagname();
  tagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:faapi.SearchResult.tagName)
}
inline ::std::string* SearchResult::mutable_tagname() {
  set_has_tagname();
  // @@protoc_insertion_point(field_mutable:faapi.SearchResult.tagName)
  return tagname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchResult::release_tagname() {
  // @@protoc_insertion_point(field_release:faapi.SearchResult.tagName)
  clear_has_tagname();
  return tagname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchResult::set_allocated_tagname(::std::string* tagname) {
  if (tagname != NULL) {
    set_has_tagname();
  } else {
    clear_has_tagname();
  }
  tagname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tagname);
  // @@protoc_insertion_point(field_set_allocated:faapi.SearchResult.tagName)
}

// -------------------------------------------------------------------

// SearchResp

// optional uint32 id = 1;
inline bool SearchResp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchResp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchResp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchResp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SearchResp::id() const {
  // @@protoc_insertion_point(field_get:faapi.SearchResp.id)
  return id_;
}
inline void SearchResp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:faapi.SearchResp.id)
}

// repeated .faapi.SearchResult results = 2;
inline int SearchResp::results_size() const {
  return results_.size();
}
inline void SearchResp::clear_results() {
  results_.Clear();
}
inline const ::faapi::SearchResult& SearchResp::results(int index) const {
  // @@protoc_insertion_point(field_get:faapi.SearchResp.results)
  return results_.Get(index);
}
inline ::faapi::SearchResult* SearchResp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:faapi.SearchResp.results)
  return results_.Mutable(index);
}
inline ::faapi::SearchResult* SearchResp::add_results() {
  // @@protoc_insertion_point(field_add:faapi.SearchResp.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::faapi::SearchResult >*
SearchResp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:faapi.SearchResp.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::faapi::SearchResult >&
SearchResp::results() const {
  // @@protoc_insertion_point(field_list:faapi.SearchResp.results)
  return results_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace faapi

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_faapi_2eproto__INCLUDED
